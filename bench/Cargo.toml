[package]
publish = false
name = "regex-benchmark"
version = "0.1.0"
authors = ["The Rust Project Developers"]
license = "MIT/Apache-2.0"
repository = "https://github.com/rust-lang/regex"
documentation = "http://doc.rust-lang.org/regex/regex/index.html"
homepage = "https://github.com/rust-lang/regex"
description = "Regex benchmarks for Rust's and other engines."
build = "build.rs"

[dependencies]
docopt = "0.6"
lazy_static = "0.1"
libc = "0.2"
onig = { version = "1.2", optional = true }
libpcre-sys = { version = "0.2", optional = true }
memmap = "0.2"
regex = { version = "0.2.0", path = "..", features = ["simd-accel"] }
regex_macros = { version = "0.2.0", path = "../regex_macros", optional = true }
regex-syntax = { version = "0.4.0", path = "../regex-syntax" }
rustc-serialize = "0.3"

[build-dependencies]
gcc = "0.3"
pkg-config = "0.3"

[[bin]]
name = "regex-run-one"
path = "src/main.rs"
bench = false

# Use features to conditionally compile benchmarked regexes, since not every
# regex works on every engine. Additionally, it is useful to be able to build
# each benchmark individually, so that not all dependencies are required to
# run only one benchmark.
#
# Note that when running benchmarks, only ONE feature should be set at a time.
# Doing anything else will probably result in weird "duplicate definition"
# compiler errors.
#
# Tip: use the `bench/run` script (in this directory) to run benchmarks.
[features]
re-pcre1 = ["libpcre-sys"]
re-pcre2 = []
re-onig = ["onig"]
re-re2 = []
re-rust = []
re-rust-bytes = []
re-rust-plugin = ["regex_macros"]
re-tcl = []

[[bench]]
name = "bench"
path = "src/bench.rs"
test = false
bench = true

[profile.release]
debug = true

[profile.bench]
debug = true

[profile.test]
debug = true
